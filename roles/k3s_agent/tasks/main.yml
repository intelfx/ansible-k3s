---
- name: Install k3s configuration
  vars:
    _k3s_units_env:
      "k3s-agent.service":
        "K3S_EXEC": '{{ _k3s_args_agent | split() | join(" ") }}'
  block:
    - name: Install environment files
      copy:
        content: |-
          # Mandatory configuration
          {% for k, v in _k3s_units_env[item].items() %}
          {{ k }}={{ v }}
          {% endfor %}

          {% if proxy.configure %}
          # Proxy configuration
          {% for k, v in proxy.env.items() %}
          {{ k }}={{ v }}
          {% endfor %}
          {% endif %}
        dest: "{{ _systemd_dir }}/{{ item }}.env"
        mode: '0600'
      loop: '{{ _k3s_units_env.keys() }}'

    - debug:
        msg: '{{ _k3s_units_env }}'

- name: Enable and run k3s-agent.service
  systemd:
    name: k3s-agent.service
    daemon_reload: true
    enabled: true
    state: restarted

# TODO: wait for k3s agent nodes, somehow (probably using delegation to one of the masters)

- name: Find k3s tool
  command:
    argv: [
      "which",
      "k3s",
    ]
  changed_when: false
  register: this

- name: Create {{ item }} symlink
  file:
    src: '{{ this.stdout }}'
    dest: "/usr/local/bin/{{ item }}"
    state: link
  loop:
    - crictl
    - ctr
