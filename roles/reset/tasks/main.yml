---
- name: Stop k3s services and payload
  systemd:
    name: '{{ item }}'
    state: killed
    enabled: false
    reset_failed: true
  loop:
    - k3s.service
    - k3s-init.service
    - k3s-agent.service
    - kubepods.slice
  failed_when: false

- name: Unmount filesystems
  command:
    argv:
      - bash
      - -c
      - |-
        exec >&2
        set -eo pipefail
        shopt -s nullglob

        findmnt --list --noheading -o TARGET | \
        { grep -E '^(/run/k3s/|/run/netns/cni-|/var/lib/kubelet/|/var/lib/rancher/|/var/lib/cni/)' || true; } \
        | sort \
        | xargs -r -n1 umount -v
  register: _k3s_reset_unmount
  changed_when: _k3s_reset_unmount.stderr_lines | length > 0

- name: Cleanup state
  command:
    argv:
      - bash
      - -c
      - |-
        exec >&2
        set -eo pipefail
        shopt -s nullglob

        rm -vrf /run/k3s/* /run/netns/cni-* /var/lib/kubelet/* /var/lib/cni/*
        rm -vrf /etc/systemd/system/k3s*.service.env
        rm -vrf /etc/rancher/k3s/*
        rm -vrf $HOME/.kube

        [[ ! -e /var/lib/rancher/k3s ]] || {
          find /var/lib/rancher/k3s -mindepth 1 -not -type d -not -path '/var/lib/rancher/k3s/agent/images/*' -print -delete
          find /var/lib/rancher/k3s -mindepth 1      -type d -empty -print -delete
        }
  register: _k3s_reset_rmrf
  changed_when: (_k3s_reset_rmrf.stderr_lines | length) > 0
